package com.e_Commerce_app_group.e_commerce_dashboard.controllers;

import com.e_Commerce_app_group.e_commerce_dashboard.Pojos.LoginEntity;
import com.e_Commerce_app_group.e_commerce_dashboard.Pojos.SignUpEntity;
import com.e_Commerce_app_group.e_commerce_dashboard.services.LoginService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

//spring security
//authentication
//who has authorised to used resources
//authorization
//which resources a person can access
//client sends authentication header (authorization )basic encoded string (base 64)technique
//server decode and outhorisation
//sering security dependency added
//after aded dependency all the endpoint will be secured
//so spring gives us default user and password or access api
//postman->auth->basic auth->user and password generated by spriing in console


@RestController
@RequestMapping("/login")
public class LoginController {
    private static final PasswordEncoder passwordencoder=new BCryptPasswordEncoder();
    @Autowired
    private LoginService logionService;
    @PostMapping
    public String signUp(@RequestBody LoginEntity user){
        SignUpEntity dbuser =logionService.checkUser(user.getEmail());
        if(dbuser == null){
            return "email not found";
        }


        if(passwordencoder.matches(user.getPassword(), dbuser.getPassword())){
            return "login successfully";

        }
        else{
            return "incorrect password";
        }



    }

}
